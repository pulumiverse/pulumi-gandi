// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domains

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-gandi/sdk/v2/go/gandi/internal"
)

type Domain struct {
	pulumi.CustomResourceState

	Admin DomainAdminOutput `pulumi:"admin"`
	// Should the domain autorenew
	Autorenew pulumi.BoolPtrOutput `pulumi:"autorenew"`
	Billing   DomainBillingOutput  `pulumi:"billing"`
	// The FQDN of the domain
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of nameservers for the domain
	//
	// Deprecated: This nameservers attribute will be removed on next major release: the nameservers resource has to be used instead.
	// See https://github.com/go-gandi/terraform-provider-gandi/issues/88 for details.
	Nameservers pulumi.StringArrayOutput `pulumi:"nameservers"`
	Owner       DomainOwnerOutput        `pulumi:"owner"`
	// A list of tags attached to the domain
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	Tech DomainTechOutput         `pulumi:"tech"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Owner == nil {
		return nil, errors.New("invalid value for required argument 'Owner'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("gandi:domains/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("gandi:domains/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	Admin *DomainAdmin `pulumi:"admin"`
	// Should the domain autorenew
	Autorenew *bool          `pulumi:"autorenew"`
	Billing   *DomainBilling `pulumi:"billing"`
	// The FQDN of the domain
	Name *string `pulumi:"name"`
	// A list of nameservers for the domain
	//
	// Deprecated: This nameservers attribute will be removed on next major release: the nameservers resource has to be used instead.
	// See https://github.com/go-gandi/terraform-provider-gandi/issues/88 for details.
	Nameservers []string     `pulumi:"nameservers"`
	Owner       *DomainOwner `pulumi:"owner"`
	// A list of tags attached to the domain
	Tags []string    `pulumi:"tags"`
	Tech *DomainTech `pulumi:"tech"`
}

type DomainState struct {
	Admin DomainAdminPtrInput
	// Should the domain autorenew
	Autorenew pulumi.BoolPtrInput
	Billing   DomainBillingPtrInput
	// The FQDN of the domain
	Name pulumi.StringPtrInput
	// A list of nameservers for the domain
	//
	// Deprecated: This nameservers attribute will be removed on next major release: the nameservers resource has to be used instead.
	// See https://github.com/go-gandi/terraform-provider-gandi/issues/88 for details.
	Nameservers pulumi.StringArrayInput
	Owner       DomainOwnerPtrInput
	// A list of tags attached to the domain
	Tags pulumi.StringArrayInput
	Tech DomainTechPtrInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	Admin *DomainAdmin `pulumi:"admin"`
	// Should the domain autorenew
	Autorenew *bool          `pulumi:"autorenew"`
	Billing   *DomainBilling `pulumi:"billing"`
	// The FQDN of the domain
	Name *string `pulumi:"name"`
	// A list of nameservers for the domain
	//
	// Deprecated: This nameservers attribute will be removed on next major release: the nameservers resource has to be used instead.
	// See https://github.com/go-gandi/terraform-provider-gandi/issues/88 for details.
	Nameservers []string    `pulumi:"nameservers"`
	Owner       DomainOwner `pulumi:"owner"`
	// A list of tags attached to the domain
	Tags []string    `pulumi:"tags"`
	Tech *DomainTech `pulumi:"tech"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	Admin DomainAdminPtrInput
	// Should the domain autorenew
	Autorenew pulumi.BoolPtrInput
	Billing   DomainBillingPtrInput
	// The FQDN of the domain
	Name pulumi.StringPtrInput
	// A list of nameservers for the domain
	//
	// Deprecated: This nameservers attribute will be removed on next major release: the nameservers resource has to be used instead.
	// See https://github.com/go-gandi/terraform-provider-gandi/issues/88 for details.
	Nameservers pulumi.StringArrayInput
	Owner       DomainOwnerInput
	// A list of tags attached to the domain
	Tags pulumi.StringArrayInput
	Tech DomainTechPtrInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainInput interface {
	pulumi.Input

	ToDomainOutput() DomainOutput
	ToDomainOutputWithContext(ctx context.Context) DomainOutput
}

func (*Domain) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (i *Domain) ToDomainOutput() DomainOutput {
	return i.ToDomainOutputWithContext(context.Background())
}

func (i *Domain) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOutput)
}

// DomainArrayInput is an input type that accepts DomainArray and DomainArrayOutput values.
// You can construct a concrete instance of `DomainArrayInput` via:
//
//	DomainArray{ DomainArgs{...} }
type DomainArrayInput interface {
	pulumi.Input

	ToDomainArrayOutput() DomainArrayOutput
	ToDomainArrayOutputWithContext(context.Context) DomainArrayOutput
}

type DomainArray []DomainInput

func (DomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (i DomainArray) ToDomainArrayOutput() DomainArrayOutput {
	return i.ToDomainArrayOutputWithContext(context.Background())
}

func (i DomainArray) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainArrayOutput)
}

// DomainMapInput is an input type that accepts DomainMap and DomainMapOutput values.
// You can construct a concrete instance of `DomainMapInput` via:
//
//	DomainMap{ "key": DomainArgs{...} }
type DomainMapInput interface {
	pulumi.Input

	ToDomainMapOutput() DomainMapOutput
	ToDomainMapOutputWithContext(context.Context) DomainMapOutput
}

type DomainMap map[string]DomainInput

func (DomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (i DomainMap) ToDomainMapOutput() DomainMapOutput {
	return i.ToDomainMapOutputWithContext(context.Background())
}

func (i DomainMap) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMapOutput)
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

func (o DomainOutput) Admin() DomainAdminOutput {
	return o.ApplyT(func(v *Domain) DomainAdminOutput { return v.Admin }).(DomainAdminOutput)
}

// Should the domain autorenew
func (o DomainOutput) Autorenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.BoolPtrOutput { return v.Autorenew }).(pulumi.BoolPtrOutput)
}

func (o DomainOutput) Billing() DomainBillingOutput {
	return o.ApplyT(func(v *Domain) DomainBillingOutput { return v.Billing }).(DomainBillingOutput)
}

// The FQDN of the domain
func (o DomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of nameservers for the domain
//
// Deprecated: This nameservers attribute will be removed on next major release: the nameservers resource has to be used instead.
// See https://github.com/go-gandi/terraform-provider-gandi/issues/88 for details.
func (o DomainOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringArrayOutput { return v.Nameservers }).(pulumi.StringArrayOutput)
}

func (o DomainOutput) Owner() DomainOwnerOutput {
	return o.ApplyT(func(v *Domain) DomainOwnerOutput { return v.Owner }).(DomainOwnerOutput)
}

// A list of tags attached to the domain
func (o DomainOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o DomainOutput) Tech() DomainTechOutput {
	return o.ApplyT(func(v *Domain) DomainTechOutput { return v.Tech }).(DomainTechOutput)
}

type DomainArrayOutput struct{ *pulumi.OutputState }

func (DomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (o DomainArrayOutput) ToDomainArrayOutput() DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) Index(i pulumi.IntInput) DomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].([]*Domain)[vs[1].(int)]
	}).(DomainOutput)
}

type DomainMapOutput struct{ *pulumi.OutputState }

func (DomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (o DomainMapOutput) ToDomainMapOutput() DomainMapOutput {
	return o
}

func (o DomainMapOutput) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return o
}

func (o DomainMapOutput) MapIndex(k pulumi.StringInput) DomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].(map[string]*Domain)[vs[1].(string)]
	}).(DomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainInput)(nil)).Elem(), &Domain{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainArrayInput)(nil)).Elem(), DomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMapInput)(nil)).Elem(), DomainMap{})
	pulumi.RegisterOutputType(DomainOutput{})
	pulumi.RegisterOutputType(DomainArrayOutput{})
	pulumi.RegisterOutputType(DomainMapOutput{})
}
