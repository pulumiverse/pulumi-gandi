// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ForwardingArgs, ForwardingState } from "./forwarding";
export type Forwarding = import("./forwarding").Forwarding;
export const Forwarding: typeof import("./forwarding").Forwarding = null as any;
utilities.lazyLoad(exports, ["Forwarding"], () => require("./forwarding"));

export { GetMailboxArgs, GetMailboxResult, GetMailboxOutputArgs } from "./getMailbox";
export const getMailbox: typeof import("./getMailbox").getMailbox = null as any;
export const getMailboxOutput: typeof import("./getMailbox").getMailboxOutput = null as any;
utilities.lazyLoad(exports, ["getMailbox","getMailboxOutput"], () => require("./getMailbox"));

export { MailboxArgs, MailboxState } from "./mailbox";
export type Mailbox = import("./mailbox").Mailbox;
export const Mailbox: typeof import("./mailbox").Mailbox = null as any;
utilities.lazyLoad(exports, ["Mailbox"], () => require("./mailbox"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gandi:email/forwarding:Forwarding":
                return new Forwarding(name, <any>undefined, { urn })
            case "gandi:email/mailbox:Mailbox":
                return new Mailbox(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gandi", "email/forwarding", _module)
pulumi.runtime.registerResourceModule("gandi", "email/mailbox", _module)
